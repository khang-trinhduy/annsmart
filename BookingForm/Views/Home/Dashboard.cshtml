@using Microsoft.AspNetCore.Identity
@inject UserManager<Sale> UserManager
@*<img title="Annhome-logo" src="~/images/Ann_Logo.png" style="width:450px; height:228px; display:block;margin-left:auto;margin-right:auto;" alt="Annhome Logo" />*@    
@*<img src="~/images/Ann_Logo.png" style="width:340px; height:172px; display:block;margin-left:auto;margin-right:auto;" alt="Annhome Logo" title="Annhome-logo" />*@


@{
    var curUser = await UserManager.GetUserAsync(User);
    TempData["sale"] = curUser.Email;
    if (curUser.Info != null)
    {
        @*string[] temp = Model.sale.Info.Split("-");
            TempData["sale"] = Model.sale.Email;
            if (temp.Length > 1)
            {
                <h6 style="font-style:italic;text-align:right">Chức vụ: @temp[1]</h6>
            }*@
    }


}
<span style="display:inline-block; height: 15px;"></span>
<h6 style="font-style:italic; text-align:right">TP. Hồ Chí Minh, ngày @DateTime.Now.Day  tháng @DateTime.Now.Month năm @DateTime.Now.Year</h6>
@*<span style="display:block; height:21px"></span>
    <div style="text-align:right">
        <a id="new" asp-action="Book">Xếp số hợp đồng</a>
        @*<a asp-action="Draft" asp-route-id="@Model.sale.ID">Hợp đồng đem đi</a>
    </div>
    <span style="display:block;height:30px"></span>
    <div style="text-align:right">
        <a id="home" asp-action="Tutor">Hướng dẫn</a>
    </div>

    @{
        if (User.IsInRole("Leader") || User.IsInRole("TeamLeader"))
        {
            <span style="display:block;height:30px"></span>
            <div style="display:block;text-align:right">
                <a id="home" asp-action="Manager">Báo cáo</a>
            </div>
        }
        if (User.IsInRole("Administrator"))
        {
            <span style="display:block;height:30px"></span>
            <div style="display:block;text-align:right">
                <a id="hd" asp-action="Admin">Admin</a>
            </div>
        }

    }*@

<p style="font-style: italic; color: #ee1818">Lưu ý: Những hợp đồng có tình trạng "số chưa chính thức" vui lòng liên hệ admin để xác nhận tiền vào (nếu đã nộp tiền) trước 19h00' cùng ngày. Quá thời gian trên, hệ thống sẽ tự động loại bỏ những hợp đồng chưa chính thức.</p>
<hr />
<span style="display:inline-block; height: 15px;"></span>
<h4 style="text-align:center;font-family:Calibri">Hợp đồng xếp chỗ</h4>
<div class="container">
    <table style="text-align:center" class="table">
        <thead>
            <tr>
                <th rowspan="2" style="vertical-align:middle; text-align: center">
                    STT
                </th>
                <th rowspan="2" style="vertical-align:middle; text-align: center">
                    Tên khách
                </th>
                <th rowspan="2" style="vertical-align:middle; text-align: center">
                    Ngày sinh
                </th>
                <th rowspan="2" style="vertical-align:middle; text-align: center">
                    Số HĐ
                </th>
                <th colspan="6">
                    Số TT
                </th>
                <th rowspan="2" style="vertical-align:middle; text-align: center">
                    Số tiền
                </th>
                <th rowspan="2" style="vertical-align:middle; text-align: center">
                    Ngày thanh toán
                </th>
                <th rowspan="2" style="vertical-align:middle; text-align: center">
                    Tình trạng
                </th>
                <th rowspan="2" style="vertical-align:middle; text-align: center">
                    Thao tác
                </th>
            </tr>
            <tr>
                <th>
                    CH
                </th>
                <th>
                    DT
                </th>
                <th>
                    BTĐL
                </th>
                <th>
                    BTSL
                </th>
                <th>
                    NPTM
                </th>
                <th>
                    Kios
                </th>
            </tr>
        </thead>
        <tbody>
            @{
                int count = 1;
                if (curUser.Meetings != null)
                {
                    foreach (var item in curUser.Meetings)
                    {
                        <tr>
                            <td>
                                @count
                            </td>
                            <td style="text-align:left !important">
                                @item.Customer
                            </td>
                            @if (item.DOB.Year == 1)
	                        {
                            <td>Thiếu<a asp-action="AddDOB" asp-route-id="@item.Id">(click vào để bổ sung)</a></td>
                            }
                            else
                            {
                                    <td>@item.DOB.Date.ToString("dd/MM/yyyy")</td>
                            }
                            <td>
                                @item.Contract
                            </td>
                            @{
                                string fs = "";
                                if (item.NCH1 > 0 || item.NCH2 > 0 || item.NCH3 > 0 || item.NCH21 > 0)
                                {
                                    //fs += "<li>Căn hộ: " + Model.appoinment.ph + "</li>";
                                    int n = item.NCH1 + item.NCH2 + item.NCH3 + item.NCH21;
                                    switch (n)
                                    {
                                        case 1:
                                            fs += "<td>" + item.ph + "</td>";
                                            break;
                                        case 2:
                                            fs += "<td>" + Convert.ToString(item.ph - 1) + " & " + item.ph + "</td>";
                                            break;
                                        default:
                                            fs += "<td>" + Convert.ToString(item.ph - n + 1) + " - " + item.ph + "</td>";
                                            break;

                                    }
                                }
                                else
                                {
                                    fs += "<td></td>";
                                }
                                if (item.NMS > 0)
                                {
                                    //fs += "<li>Biệt thự: " + Model.appoinment.pms + "</li>";
                                    switch (item.NMS)
                                    {
                                        case 1:
                                            fs += "<td>" + item.pms + "</td>";
                                            break;
                                        case 2:
                                            fs += "<td>" + Convert.ToString(item.pms - 1) + " & " + item.pms + "</td>";
                                            break;
                                        default:
                                            fs += "<td>" + Convert.ToString(item.pms - item.pms + 1) + " - " + item.pms + "</td>";
                                            break;

                                    }
                                }
                                else
                                {
                                    fs += "<td></td>";
                                }
                                if (item.NSH > 0)
                                {
                                    //fs += "<li>Nhà phố: " + Model.appoinment.psh + "</li>";
                                    switch (item.NSH)
                                    {
                                        case 1:
                                            fs += "<td>" + item.psh + "</p>";
                                            break;
                                        case 2:
                                            fs += "<td>" + Convert.ToString(item.psh - 1) + " & " + item.psh + "</p>";
                                            break;
                                        default:
                                            fs += "<td>" + Convert.ToString(item.psh - item.NSH + 1) + " - " + item.psh + "</td>";
                                            break;

                                    }
                                }
                                else
                                {
                                    fs += "<td></td>";
                                }
                                if (item.NSH1 > 0)
                                {
                                    //fs += "<li>Nhà phố: " + Model.appoinment.psh + "</li>";
                                    switch (item.NSH1)
                                    {
                                        case 1:
                                            fs += "<td>" + item.psh1 + "</p>";
                                            break;
                                        case 2:
                                            fs += "<td>" + Convert.ToString(item.psh1 - 1) + " & " + item.psh1 + "</p>";
                                            break;
                                        default:
                                            fs += "<td>" + Convert.ToString(item.psh1 - item.NSH1 + 1) + " - " + item.psh1 + "</td>";
                                            break;

                                    }
                                }
                                else
                                {
                                    fs += "<td></td>";
                                }
                                if (item.NSHH > 0)
                                {
                                    //fs += "<li>Shophouse: " + Model.appoinment.pshh + "</li>";
                                    switch (item.NSHH)
                                    {
                                        case 1:
                                            fs += "<td>" + item.pshh + "</td>";
                                            break;
                                        case 2:
                                            fs += "<td>" + Convert.ToString(item.pshh - 1) + " & " + item.pshh + "</td>";
                                            break;
                                        default:
                                            fs += "<td>" + Convert.ToString(item.pshh - item.NSHH + 1) + " - " + item.pshh + "</td>";
                                            break;

                                    }
                                }
                                else
                                {
                                    fs += "<td></td>";
                                }
                                if (item.NS > 0)
                                {
                                    //fs += "<li>Shophouse: " + Model.appoinment.pshh + "</li>";
                                    switch (item.NS)
                                    {
                                        case 1:
                                            fs += "<td>" + item.pns + "</td>";
                                            break;
                                        case 2:
                                            fs += "<td>" + Convert.ToString(item.pns - 1) + " & " + item.pns + "</td>";
                                            break;
                                        default:
                                            fs += "<td>" + Convert.ToString(item.pns - item.NS + 1) + " - " + item.pns + "</td>";
                                            break;

                                    }
                                }
                                else
                                {
                                    fs += "<td></td>";
                                }
                            }
                            @Html.Raw(fs)
                            <td>
                                @String.Format("{0:N0}", item.Money)
                            </td>
                            @{
                                string date = "";
                                try
                                {
                                    DateTime d = DateTime.ParseExact(item.dTime, "ddMMyyyy HH:mm:ss.FFFFFFF",
                                             System.Globalization.CultureInfo.InvariantCulture);
                                    date += "<td>" +
                                @d.Day + "/" + @d.Month + "/" + @d.Year +
                        "</td>";
                                }
                                catch (Exception)
                                {
                                    date += "<td></td>";

                                }

                            }
                            @Html.Raw(date)
                            <td>
                                @{
                                    string confirm = "";
                                    @if (item.Confirm != true)
                                    {
                                        confirm = "Số chưa chính thức";
                                    }
                                    else
                                    {
                                        confirm = "Số chính thức";
                                    }
                                }
                                @Html.Raw(confirm)
                            </td>
                            <td>
                                <a asp-route-id="@item.Id" asp-action="Views">HĐ</a> | <a asp-route-id="@item.Id" asp-action="Passport">Cập nhật CMND</a>
                            </td>
                        </tr>
                        count += 1;
                    }
                }
            }

        </tbody>
    </table>
</div>
<style>
    table, td, th {
        border: 1px solid #ddd;
        text-align: left;
    }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 15px;
    }

    th, td {
        text-align: center;
        vertical-align: middle;
    }

    table {
        color: #333;
        font-family: Helvetica, Arial, sans-serif;
        width: 640px;
        border-collapse: collapse;
        border-spacing: 0;
    }

    td, th {
        border: 1px solid transparent; /* No more visible border */
        height: 30px;
        transition: all 0.3s; /* Simple transition for hover effect */
    }

    th {
        border: 1px solid #1fce98;
        background: #1fce98;
        font-weight: bold;
        color: white;
    }

    td {
        background: #FAFAFA;
        text-align: center;
    }

    /* Cells in even rows (2,4,6...) are one color */
    tr:nth-child(even) td {
        background: #F1F1F1;
    }

    /* Cells in odd rows (1,3,5...) are another (excludes header cells)  */
    tr:nth-child(odd) td {
        background: #FEFEFE;
    }

    /*tr td:hover {
        background: #666;
        color: #FFF;
    }*/

    /*table {
        overflow: hidden;
        display: inline-block;
    }*/

    /*tr:hover {
        background-color: #faf2de;
    }*/


    td, th {
        position: relative;
    }

        /*td:hover::after,
        th:hover::after {
            content: "";
            position: absolute;
            background-color: #1fce98;
            left: 0;
            top: -5000px;
            height: 1000px;
            width: 100%;
            z-index: -1;
        }*/
</style>