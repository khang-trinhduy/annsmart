@model BookingForm.Models.ManagerModal;

@{
    ViewData["Title"] = " - Chỉ tiêu";
}
@{
    ViewData["Title"] = " - Doanh thu";
}
<img title="Annhome-logo" src="~/images/Ann_Logo.png" style="width:340px; height:172px; display:block;margin-left:auto;margin-right:auto;" alt="Annhome Logo" />

<h6 style="font-style:italic; text-align:right">TP. Hồ Chí Minh, ngày @DateTime.Now.Day  tháng @DateTime.Now.Month năm @DateTime.Now.Year</h6>

<h2 style="text-align:center; font-family:Calibri">Chỉ tiêu</h2>
<a asp-action="Profit">Doanh thu</a>
<table class="table">
    <thead>
        <tr>
            <th rowspan="2">
                STT
            </th>
            <th rowspan="2">
                Thông tin sale
            </th>
            <th colspan="2">CH</th>
            <th colspan="2">BT</th>
            <th colspan="2">NP</th>
            <th colspan="2">NPTM</th>
            <th colspan="2">KIOS</th>
        </tr>
        <tr>
            <th>Tháng trước</th>
            <th>Tháng này</th>
            <th>Tháng trước</th>
            <th>Tháng này</th>
            <th>Tháng trước</th>
            <th>Tháng này</th>
            <th>Tháng trước</th>
            <th>Tháng này</th>
            <th>Tháng trước</th>
            <th>Tháng này</th>
        </tr>
    </thead>
    <tbody>
        @{int count = 1; }
        @foreach (var item in Model.sales)
        {
            <tr>
                <td>
                    @count
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                @{

                    int temp = Model.appoinments.Where(m => m.Sale == item && m.dTime != null && DateTime.ParseExact(m.dTime, "ddMMyyyy HH:mm:ss.FFFFFFF", System.Globalization.CultureInfo.InvariantCulture).Month == DateTime.Now.AddMonths(-1).Month).Sum(m => m.NCH1 + m.NCH2 + m.NCH21 + m.NCH3);
                }
                <td>
                    @temp
                </td>
                @{

                    int temp1 = Model.appoinments.Where(m => m.Sale == item && m.dTime != null && DateTime.ParseExact(m.dTime, "ddMMyyyy HH:mm:ss.FFFFFFF", System.Globalization.CultureInfo.InvariantCulture).Month == DateTime.Now.Month).Sum(m => m.NCH1 + m.NCH2 + m.NCH21 + m.NCH3);
                }
                <td>
                    @temp1
                </td>
                @{

                    int temp2 = Model.appoinments.Where(m => m.Sale == item && m.dTime != null && DateTime.ParseExact(m.dTime, "ddMMyyyy HH:mm:ss.FFFFFFF", System.Globalization.CultureInfo.InvariantCulture).Month == DateTime.Now.AddMonths(-1).Month).Sum(m => m.NMS);
                }
                <td>
                    @temp2
                </td>
                @{

                    int temp3 = Model.appoinments.Where(m => m.Sale == item && m.dTime != null && DateTime.ParseExact(m.dTime, "ddMMyyyy HH:mm:ss.FFFFFFF", System.Globalization.CultureInfo.InvariantCulture).Month == DateTime.Now.Month).Sum(m => m.NMS);
                }
                <td>
                    @temp3
                </td>
                @{

                    int temp4 = Model.appoinments.Where(m => m.Sale == item && m.dTime != null && DateTime.ParseExact(m.dTime, "ddMMyyyy HH:mm:ss.FFFFFFF", System.Globalization.CultureInfo.InvariantCulture).Month == DateTime.Now.AddMonths(-1).Month).Sum(m => m.NSH);
                }
                <td>
                    @temp4
                </td>
                @{

                    int temp5 = Model.appoinments.Where(m => m.Sale == item && m.dTime != null && DateTime.ParseExact(m.dTime, "ddMMyyyy HH:mm:ss.FFFFFFF", System.Globalization.CultureInfo.InvariantCulture).Month == DateTime.Now.Month).Sum(m => m.NSH);
                }
                <td>
                    @temp5
                </td>
                @{

                    int temp6 = Model.appoinments.Where(m => m.Sale == item && m.dTime != null && DateTime.ParseExact(m.dTime, "ddMMyyyy HH:mm:ss.FFFFFFF", System.Globalization.CultureInfo.InvariantCulture).Month == DateTime.Now.AddMonths(-1).Month).Sum(m => m.NSHH);
                }
                <td>
                    @temp6
                </td>
                @{

                    int temp7 = Model.appoinments.Where(m => m.Sale == item && m.dTime != null && DateTime.ParseExact(m.dTime, "ddMMyyyy HH:mm:ss.FFFFFFF", System.Globalization.CultureInfo.InvariantCulture).Month == DateTime.Now.Month).Sum(m => m.NSHH);
                }
                <td>
                    @temp7
                </td>
                @{

                    int temp8 = Model.appoinments.Where(m => m.Sale == item && m.dTime != null && DateTime.ParseExact(m.dTime, "ddMMyyyy HH:mm:ss.FFFFFFF", System.Globalization.CultureInfo.InvariantCulture).Month == DateTime.Now.AddMonths(-1).Month).Sum(m => m.NS);
                }
                <td>
                    @temp8
                </td>
                @{

                    int temp9 = Model.appoinments.Where(m => m.Sale == item && m.dTime != null && DateTime.ParseExact(m.dTime, "ddMMyyyy HH:mm:ss.FFFFFFF", System.Globalization.CultureInfo.InvariantCulture).Month == DateTime.Now.Month).Sum(m => m.NS);
                }
                <td>
                    @temp9
                </td>
            </tr>
            count++;
        }
    </tbody>
</table>



<style>
    table, td, th {
        border: 1px solid #ddd;
        text-align: left;
    }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 15px;
    }

    th, td {
        text-align: center;
        vertical-align: middle;
    }

    table {
        color: #333;
        font-family: Helvetica, Arial, sans-serif;
        width: 640px;
        border-collapse: collapse;
        border-spacing: 0;
    }

    td, th {
        border: 1px solid transparent; /* No more visible border */
        height: 30px;
        transition: all 0.3s; /* Simple transition for hover effect */
    }

    th {
        border: 1px solid #5b212e;
        background: #5b212e;
        font-weight: bold;
        color: white;
    }

    td {
        background: #FAFAFA;
        text-align: center;
    }

    /* Cells in even rows (2,4,6...) are one color */
    tr:nth-child(even) td {
        background: #F1F1F1;
    }

    /* Cells in odd rows (1,3,5...) are another (excludes header cells)  */
    tr:nth-child(odd) td {
        background: #FEFEFE;
    }

    tr td:hover {
        background: #666;
        color: #FFF;
    }

    /*table {
        overflow: hidden;
        display: inline-block;
    }*/

    tr:hover {
        background-color: #faf2de;
    }


    td, th {
        position: relative;
    }

        td:hover::after,
        th:hover::after {
            content: "";
            position: absolute;
            background-color: #5b212e;
            left: 0;
            top: -5000px;
            height: 1000px;
            width: 100%;
            z-index: -1;
        }
</style>